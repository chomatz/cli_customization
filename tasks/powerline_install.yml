---

- name: ensure tasks run only on selected os releases
  block:

    - name: install powerline
      ansible.builtin.package:
        name: "{{ powerline_packages_base | ansible.builtin.union(powerline_packages_redhat) }}"

    - name: locate powerline-bash script
      ansible.builtin.shell:
        cmd: find / -name powerline.sh | grep -i bash
      changed_when: false
      register: bash_powerline

    - name: display powerline location
      ansible.builtin.debug:
        var: bash_powerline
        verbosity: 1

    - name: configure powerline for bash
      ansible.builtin.template:
        src: powerline_bash.sh.j2
        dest: /etc/profile.d/powerline-bash.sh
        owner: root
        group: root
        mode: "0644"

    - name: configure powerline for tmux
      ansible.builtin.template:
        src: powerline_tmux.sh.j2
        dest: /etc/profile.d/powerline-tmux.sh
        owner: root
        group: root
        mode: "0644"

    - name: initialize vimrc generator
      ansible.builtin.template:
        src: vimrc_generator.sh.j2
        dest: /etc/profile.d/vimrc_generator.sh
        owner: root
        group: root
        mode: "0644"

    - name: add powerline variable(s) to vimrc generator
      ansible.builtin.blockinfile:
        path: /etc/profile.d/vimrc_generator.sh
        insertafter: "### variables ###"
        marker: "### {mark} powerline configuration ###"
        block: |
          config_powerline=(
            "set laststatus=2"
            "set showtabline=2"
            "set noshowmode"
            "set t_Co=256"
          )
 
    - name: add powerline script(s) to vimrc generator
      ansible.builtin.blockinfile:
        path: /etc/profile.d/vimrc_generator.sh
        insertafter: "### scripts ###"
        marker: "### {mark} powerline settings ###"
        block: |
          for configuration in ${config_powerline[*]}; do
            grep -qxF "$configuration" "$out_file" || echo "$configuration" >> "$out_file"
          done

  when: ansible_distribution == "Fedora"

...
